<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title></title>
	<link href="https://icetigergeo.com/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://icetigergeo.com"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2022-05-29T00:00:00+00:00</updated>
	<id>https://icetigergeo.com/atom.xml</id>
	<entry xml:lang="en">
		<title>My Coding Journey pt.1</title>
		<published>2022-05-29T00:00:00+00:00</published>
		<updated>2022-05-29T00:00:00+00:00</updated>
		<link href="https://icetigergeo.com/coding-journey-part-1/" type="text/html"/>
		<id>https://icetigergeo.com/coding-journey-part-1/</id>
		<content type="html">&lt;p&gt;Over the course of the past three to six months, I have learned a lot about coding and tech that I never could have dreamed I’d ever learn. I began my coding journey with kind of a rough start, as I have always been more of the creative work-with-my-hands type of person with painting and working with clay, so getting into the right mindset for coding and combatting my pre-existing code blindness has been quite the frustrating adjustment. I know it will be worth the brain calibration once I’m able to use it!&lt;&#x2F;p&gt;
&lt;p&gt;The first thing I learned was SQL. I actually really like SQL, and I had lots of ups and downs learning it. For instance, the &amp;quot;where&amp;quot; statements and &amp;quot;from&amp;quot; statements were a fun challenge for me to calibrate to, and I redid the online challenges on W3schools over and over and over again to make sure that I could remember how they worked. As I was learning other things, those would stick, but oh goodness when I started learning about SQL &amp;quot;join&amp;quot; statements, that was a big nightmare mess, and it took me lots of frustrating attempts to understand it. Sometimes it still doesn&#x27;t make sense to me. I remember asking my mentor why the heck is there even a (insert join name here) if you could just use a standard &amp;quot;left inner join&amp;quot; instead? Someone somewhere uses that kind of join, but apparently it&#x27;s in rare cases, so I was proud of asking that question.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>My Coding journey pt.2</title>
		<published>2022-05-29T00:00:00+00:00</published>
		<updated>2022-05-29T00:00:00+00:00</updated>
		<link href="https://icetigergeo.com/coding-journey-part-2/" type="text/html"/>
		<id>https://icetigergeo.com/coding-journey-part-2/</id>
		<content type="html">&lt;p&gt;After feeling confident that I knew the SQL commands and could demonstrate them well on W3schools, I moved on to rust. By the way, rust coders being called “rustaceans” brings me so much joy – cute little crab mascot. So far, it has not been super easy for me to remember all the rust commands because there are so many of them. I have kind of a silly fail story for when I first started out. The first project for the rust book is to print “Hello world!”, and I was trying to be silly and said, well why do I have to be mainstream and do what it says? I’m gonna make it say something else! So I had it say something else that made me giggle, but I had realized I accidentally named everything that. The directory was suddenly renamed to those words, and all of my projects were named those words, and I started freaking out wondering what I did wrong yet laughing at the fact that my computer was suddenly saying a very silly thing to me everywhere. Turns out I did not realize I needed a text editor like Emacs to get certain things to work properly and move files around and name them properly, so I was just typing commands directly into a terminal that was just doing what it was told, so things failed horribly but also in my opinion wonderfully as I learned a lot from it. &lt;&#x2F;p&gt;
&lt;p&gt;After this mishap I learned all of emacs and the commands I could use with rust and holy moly was that helpful; everything made so much more sense. Suddenly I could move things around, create new files, complete the “hello world” project, and progress further in the rust book. The next project in the rust book was the guessing game, which I actually had a lot of fun with, even though it took me so many tries. I failed a lot and didn’t know what I did wrong till I brought it to my mentor who told me I had the wrong number of brackets. &lt;em&gt;sigh&lt;&#x2F;em&gt; I was so upset. I had looked over my code and compared for over an hour going, “What the heck! It’s all correct! I swear every word matches!” Lesson 1 from starting coding: be prepared to be grumpy and have everything fail from the tiniest mistakes.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>My Coding Journey pt.3</title>
		<published>2022-05-29T00:00:00+00:00</published>
		<updated>2022-05-29T00:00:00+00:00</updated>
		<link href="https://icetigergeo.com/coding-journey-part-3/" type="text/html"/>
		<id>https://icetigergeo.com/coding-journey-part-3/</id>
		<content type="html">&lt;p&gt;After working in rust (I’m still learning and by no means an expert quite yet, but I’m working towards it!), I was directed to take a look at how Tokio works along with some other server nuances that if I didn’t know about it could really mess up my code. This was the most difficult thing for my brain to comprehend and focus on for some reason. It’s the situation where you are reading a book but you find yourself reading a full page and thinking, “huh.. I didn’t comprehend any of that; let me read it again” and being stuck in that loop. I had to take lots of breaks to go work on something else and learn little by little of Tokio, but I see that things like Tokio are how apps like Doordash work, so it’s stuff that I need to know.&lt;&#x2F;p&gt;
&lt;p&gt;While learning about Tokio I was also learning Linux commands because I had not worked with a linux system at all before 6 months ago, but I think I picked them up pretty well and relatively quickly which I was very proud of myself for.&lt;&#x2F;p&gt;
&lt;p&gt;Things like this seem so obvious to the learning process, but I’ve found most people who are trying to teach others code and lots of tutorials to teach new coders will assume they already know things like linux commands and emacs because to them it’s been common knowledge for so long, but oh boy is trying to learn coding from going through the rust book so very confusing when just trying to type things on a terminal without knowing you NEED these things to really do anything more than download something. It can be super confusing to both student and teacher, but once you get it down it gets so much easier.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>My Coding Journey pt.4</title>
		<published>2022-05-29T00:00:00+00:00</published>
		<updated>2022-05-29T00:00:00+00:00</updated>
		<link href="https://icetigergeo.com/coding-journey-part-4/" type="text/html"/>
		<id>https://icetigergeo.com/coding-journey-part-4/</id>
		<content type="html">&lt;p&gt;Back to talking about rust,
one of the other projects of note was the guessing game. The first part was to use rust to tell the system to generate a random number , you can print it to screen to confirm the code ran correctly but for the game itself you have to ask rust to hide the random number and wait for an input. Once it has the input it asks rust to look back at the generated number and compare. You would make sure the generated number was within a certain number bracket like between 1 and 100 and it would take the number you input as a guess and compare to the generated number and spit back in text that the number was too high or too low and when guessed correctly it would output a congratulations message. To get it to compare more than once and to input multiple guesses when you got it incorrect I had to get the code to loop which was brand new for me at the time but I thought the concept was really cool and the thought crossed my mind that this was probably how alot of my favorite games growing up likely had loops involved in the making of them where you could replay when you died like “game over!… play again?” and it would wait for your input and if you selected play again it would loop back to the beginning of the code or the start of that game.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>My Coding Journey pt.5</title>
		<published>2022-05-29T00:00:00+00:00</published>
		<updated>2022-05-29T00:00:00+00:00</updated>
		<link href="https://icetigergeo.com/coding-journey-part-5/" type="text/html"/>
		<id>https://icetigergeo.com/coding-journey-part-5/</id>
		<content type="html">&lt;p&gt;I have another silly story of my learning process. Once I started on the guessing game, I realized hey maybe I can be brave and rework it to say something cute and have my boyfriend guess the numbers for a secret message if he gets it right. The idea was that it would prompt “Guess a number for a secret message!” and if it was too low a guess it would be like “nope! too small” and too big would be “nice try! you were close, but your guess was too big.” The celebration for guessing the number correctly would be “I love you, boyfriend’s name!” but oh goodness I kind of got over my head trying to move things around. I had the brackets issue where I didn’t have enough brackets in the right places, and I worked for hours to try to fix it. I reluctantly had to ask for help and said “DON’T READ IT! but also.. please read it to see what I did wrong.” He pointed out the bracket issue, and I eventually had to reset the code to the original guessing game and edit it a bit less so the “too small” and “too big” messages stayed the standard, but I was able to get the prompt and the congratulations message correct! I think he thought the attempt was cute, but it was so embarrassing to ask for help to fix a surprise for the person you’re asking help from, like a little walk of shame. In the end, it taught me a lot about being mindful of those pesky brackets.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>My Coding Journey pt.6</title>
		<published>2022-05-29T00:00:00+00:00</published>
		<updated>2022-05-29T00:00:00+00:00</updated>
		<link href="https://icetigergeo.com/coding-journey-part-6/" type="text/html"/>
		<id>https://icetigergeo.com/coding-journey-part-6/</id>
		<content type="html">&lt;p&gt;Learning Rust coding language:&lt;&#x2F;p&gt;
&lt;p&gt;Learning rust has been a wild ride for me especially after learning Sql. There are so many things in rust to memorize unlike SQL which has closer to maybe 20-30 commands and nuance coding techniques to remember but rust has what feels like the entirety of an english dictionary to learn, they really aren’t kidding when they say “coding language” you really are learning a whole LANGUAGE.
When I started the “Hello world” project I was thinking oh neat all I have to do is Println!(“Hello, World!”); and it will print me a nice little message I hope all of rust is like this….. spoiler its not. &lt;&#x2F;p&gt;
&lt;p&gt;I started learning from https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;book&#x2F; which was very helpful for starting out definitely would recommend. Then once I got to a little bit after programming a guessing game (Lot’s of fun to play with by the way) I started a course with https:&#x2F;&#x2F;www.educative.io&#x2F;courses&#x2F;learn-rust-from-scratch. This one is in some ways easier to understand but also harder in that when it has you do a coding challenge some of the code you have to write to get the correct solution is not mentioned or listed in the course like a small nuance “ we thought you knew this already” rust command which in some ways is helpful to rewind and look up what that particular command means and what it is used for but in a challenge mode to put something that was not mentioned in the portion you learned from was super tricky and frustrating.
In my personal experience with this rust learning course I have a difficult time with math equations and for some reason my school did not teach one of the forms of math listed in this course (Factorials) so I definitely learned more new things than I thought and the math sections took me way longer than I’d like to admit. The sections with word problems though and explanations not using equations I understood much faster and with more effiecency to retain the knowledge and repeat it back like Enums, they used a stoplight and chess pieces to explain enums which actually helped me alot to understand you could use enums to help you if you are trying to get something to move around and you can label the thing you are moving like to tell the white knight chess piece to move vertically and get the black knight to move horizontally.&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
